import React, { useState } from 'react';
import { 
  FaUsers, 
  FaUserShield, 
  FaCog, 
  FaSignOutAlt,
  FaPlus,
  FaEdit,
  FaTrash
} from 'react-icons/fa';
import { useNavigate } from 'react-router-dom';

const AdminDashboard = () => {
  const [users, setUsers] = useState([]);
  const [roles, setRoles] = useState([]);
  const [activeSection, setActiveSection] = useState('users');
  const [selectedUser, setSelectedUser] = useState(null);
  const [selectedRole, setSelectedRole] = useState(null);
  const [isUserModalOpen, setIsUserModalOpen] = useState(false);
  const [isRoleModalOpen, setIsRoleModalOpen] = useState(false);

  const navigate = useNavigate();

  const StatCard = ({ icon: Icon, title, value, color }) => (
    <div className="bg-dark-primary/70 border border-slate-gray rounded-lg p-6 flex items-center space-x-4 transform hover:scale-105 transition-all duration-300">
      <Icon className={`text-4xl ${color}`} />
      <div>
        <h3 className="text-gray-300 text-sm">{title}</h3>
        <p className="text-2xl font-bold text-light-blue">{value}</p>
      </div>
    </div>
  );

  const UserModal = ({ isOpen, onClose, user }) => {
    if (!isOpen) return null;

    return (
      <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
        <div className="bg-dark-primary p-8 rounded-lg w-96">
          <h2 className="text-2xl text-light-blue mb-6">
            {user ? 'Edit User' : 'Add New User'}
          </h2>
          <form>
            <div className="mb-4">
              <label className="block text-gray-300 mb-2">Name</label>
              <input 
                type="text" 
                className="w-full bg-slate-gray/30 text-white p-2 rounded"
                defaultValue={user?.name || ''}
              />
            </div>
            <div className="mb-4">
              <label className="block text-gray-300 mb-2">Email</label>
              <input 
                type="email" 
                className="w-full bg-slate-gray/30 text-white p-2 rounded"
                defaultValue={user?.email || ''}
              />
            </div>
            <div className="mb-4">
              <label className="block text-gray-300 mb-2">Role</label>
              <select 
                className="w-full bg-slate-gray/30 text-white p-2 rounded"
                defaultValue={user?.role || ''}
              >
                <option value="">Select Role</option>
                <option value="Admin">Admin</option>
                <option value="User">User</option>
              </select>
            </div>
            <div className="flex justify-end space-x-4">
              <button 
                type="button"
                onClick={onClose}
                className="bg-slate-gray text-white px-4 py-2 rounded"
              >
                Cancel
              </button>
              <button 
                type="submit"
                className="bg-light-blue text-dark-primary px-4 py-2 rounded"
              >
                Save
              </button>
            </div>
          </form>
        </div>
      </div>
    );
  };

  const RoleModal = ({ isOpen, onClose, role }) => {
    if (!isOpen) return null;

    return (
      <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
        <div className="bg-dark-primary p-8 rounded-lg w-96">
          <h2 className="text-2xl text-light-blue mb-6">
            {role ? 'Edit Role' : 'Add New Role'}
          </h2>
          <form>
            <div className="mb-4">
              <label className="block text-gray-300 mb-2">Role Name</label>
              <input 
                type="text" 
                className="w-full bg-slate-gray/30 text-white p-2 rounded"
                defaultValue={role?.name || ''}
              />
            </div>
            <div className="mb-4">
              <label className="block text-gray-300 mb-2">Permissions</label>
              <div className="space-y-2">
                {['Read', 'Write', 'Delete', 'Manage Users'].map(permission => (
                  <div key={permission} className="flex items-center">
                    <input 
                      type="checkbox" 
                      id={permission}
                      className="mr-2"
                      defaultChecked={role?.permissions?.includes(permission)}
                    />
                    <label htmlFor={permission}>{permission}</label>
                  </div>
                ))}
              </div>
            </div>
            <div className="flex justify-end space-x-4">
              <button 
                type="button"
                onClick={onClose}
                className="bg-slate-gray text-white px-4 py-2 rounded"
              >
                Cancel
              </button>
              <button 
                type="submit"
                className="bg-light-blue text-dark-primary px-4 py-2 rounded"
              >
                Save
              </button>
            </div>
          </form>
        </div>
      </div>
    );
  };

  const renderUserSection = () => (
    <div>
      <div className="flex justify-between items-center mb-6">
        <h2 className="text-2xl font-bold text-light-blue">User Management</h2>
        <button 
          onClick={() => {
            setSelectedUser(null);
            setIsUserModalOpen(true);
          }}
          className="flex items-center space-x-2 bg-light-blue text-dark-primary px-4 py-2 rounded-lg hover:bg-opacity-90"
        >
          <FaPlus />
          <span>Add User</span>
        </button>
      </div>
      {users.length === 0 ? (
        <div className="text-center text-gray-300 py-10">
          No users found. Add a new user to get started.
        </div>
      ) : (
        <table className="w-full bg-dark-primary/70 border border-slate-gray rounded-lg">
          <thead>
            <tr className="bg-slate-gray/30 text-gray-300">
              <th className="p-4 text-left">Name</th>
              <th className="p-4 text-left">Email</th>
              <th className="p-4 text-left">Role</th>
              <th className="p-4 text-left">Actions</th>
            </tr>
          </thead>
          <tbody>
            {/* User rows would be mapped here */}
          </tbody>
        </table>
      )}
    </div>
  );

  const renderRoleSection = () => (
    <div>
      <div className="flex justify-between items-center mb-6">
        <h2 className="text-2xl font-bold text-light-blue">Role Management</h2>
        <button 
          onClick={() => {
            setSelectedRole(null);
            setIsRoleModalOpen(true);
          }}
          className="flex items-center space-x-2 bg-light-blue text-dark-primary px-4 py-2 rounded-lg hover:bg-opacity-90"
        >
          <FaPlus />
          <span >Add Role</span>
        </button>
      </div>
      {roles.length === 0 ? (
        <div className="text-center text-gray-300 py-10">
          No roles found. Add a new role to get started.
        </div>
      ) : (
        <table className="w-full bg-dark-primary/70 border border-slate-gray rounded-lg">
          <thead>
            <tr className="bg-slate-gray/30 text-gray-300">
              <th className="p-4 text-left">Role Name</th>
              <th className="p-4 text-left">Permissions</th>
              <th className="p-4 text-left">Actions</th>
            </tr>
          </thead>
          <tbody>
            {/* Role rows would be mapped here */}
          </tbody>
        </table>
      )}
    </div>
  );

  return (
    <div className="p-6">
      <h1 className="text-3xl font-bold text-light-blue mb-6">Admin Dashboard</h1>
      <div className="flex space-x-4 mb-6">
        <button 
          onClick={() => setActiveSection('users')}
          className={`flex-1 p-4 text-center ${activeSection === 'users' ? 'bg-light-blue text-dark-primary' : 'bg-dark-primary text-gray-300'}`}
        >
          User Management
        </button>
        <button 
          onClick={() => setActiveSection('roles')}
          className={`flex-1 p-4 text-center ${activeSection === 'roles' ? 'bg-light-blue text-dark-primary' : 'bg-dark-primary text-gray-300'}`}
        >
          Role Management
        </button>
      </div>
      {activeSection === 'users' ? renderUserSection() : renderRoleSection()}
      <UserModal isOpen={isUserModalOpen} onClose={() => setIsUserModalOpen(false)} user={selectedUser } />
      <RoleModal isOpen={isRoleModalOpen} onClose={() => setIsRoleModalOpen(false)} role={selectedRole} />
    </div>
  );
};

export default AdminDashboard;